"""Add indexes and audit log table

Revision ID: 242bfb2cc70f
Revises: 4b100924591d
Create Date: 2025-07-24 19:02:24.568230

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '242bfb2cc70f'
down_revision: Union[str, Sequence[str], None] = '4b100924591d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('table_name', sa.String(), nullable=True),
    sa.Column('row_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_log_table_name'), 'audit_log', ['table_name'], unique=False)
    op.create_index(op.f('ix_audit_log_timestamp'), 'audit_log', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_log_user_id'), 'audit_log', ['user_id'], unique=False)
    op.create_table('in_app_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_in_app_notifications_user_id'), 'in_app_notifications', ['user_id'], unique=False)
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('proficiency', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skills_user_id'), 'skills', ['user_id'], unique=False)
    op.create_index(op.f('ix_education_user_id'), 'education', ['user_id'], unique=False)
    op.create_index(op.f('ix_experience_user_id'), 'experience', ['user_id'], unique=False)
    op.create_index(op.f('ix_job_listings_application_status'), 'job_listings', ['application_status'], unique=False)
    op.drop_constraint(op.f('job_preferences_user_id_key'), 'job_preferences', type_='unique')
    op.create_index(op.f('ix_job_preferences_user_id'), 'job_preferences', ['user_id'], unique=True)
    op.create_index(op.f('ix_projects_user_id'), 'projects', ['user_id'], unique=False)
    op.drop_column('users', 'skills')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('skills', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_projects_user_id'), table_name='projects')
    op.drop_index(op.f('ix_job_preferences_user_id'), table_name='job_preferences')
    op.create_unique_constraint(op.f('job_preferences_user_id_key'), 'job_preferences', ['user_id'])
    op.drop_index(op.f('ix_job_listings_application_status'), table_name='job_listings')
    op.drop_index(op.f('ix_experience_user_id'), table_name='experience')
    op.drop_index(op.f('ix_education_user_id'), table_name='education')
    op.drop_index(op.f('ix_skills_user_id'), table_name='skills')
    op.drop_table('skills')
    op.drop_index(op.f('ix_in_app_notifications_user_id'), table_name='in_app_notifications')
    op.drop_table('in_app_notifications')
    op.drop_index(op.f('ix_audit_log_user_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_timestamp'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_table_name'), table_name='audit_log')
    op.drop_table('audit_log')
    # ### end Alembic commands ###
